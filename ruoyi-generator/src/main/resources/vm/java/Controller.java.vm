package ${basePackage}.web.controller.${moduleName};

import java.util.List;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import cn.aylives.ruoyi.common.annotation.Log;
import cn.aylives.ruoyi.common.enums.BusinessType;
import cn.aylives.ruoyi.common.utils.StringUtils;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import cn.aylives.ruoyi.common.core.controller.BaseController;
import cn.aylives.ruoyi.common.core.page.TableDataInfo;
import cn.aylives.ruoyi.common.core.domain.AjaxResult;
import cn.aylives.ruoyi.common.utils.poi.ExcelUtil;
import cn.aylives.ruoyi.system.domain.SysDept;
import cn.aylives.ruoyi.admin.core.dept.DeptData;
/**
 * ${functionName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@Controller
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller extends BaseController
{
	private String prefix = "${moduleName}/${businessName}";

	@Autowired
	private I${ClassName}Service ${className}Service;

	@RequiresPermissions("${permissionPrefix}:view")
	@GetMapping()
	public String ${className}()
	{
	    return prefix + "/${businessName}";
	}

	/**
	 * 选择列表
	 */
	@GetMapping("/select")
	public String ${className}Select()
	{
		return prefix + "/select";
	}


	/**
	 * 选择列表数据
	 */
	@PostMapping("/select/list")
	@ResponseBody
	public TableDataInfo selectList(@DeptData SysDept sysDept,${ClassName} ${className})
	{
		startPage();
		List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
		return getDataTable(list);
	}


	/**
	 * 查询${functionName}列表
	 */
	@RequiresPermissions("${permissionPrefix}:list")
	@PostMapping("/list")
	@ResponseBody
	public TableDataInfo list(${ClassName} ${className})
	{
		startPage();
		List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
		return getDataTable(list);
	}



	/**
	 * 导出${functionName}列表
	 */
	@RequiresPermissions("${permissionPrefix}:export")
	@PostMapping("/export")
	@ResponseBody
	public AjaxResult export(${ClassName} ${className})
	{
		List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
		ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class);
		return util.exportExcel(list, "${businessName}");
	}

	/**
	 * 新增${functionName}
	 */
	@GetMapping(value = { "/add/{${pkColumn.javaField}}", "/add" })
	public String add(@PathVariable(value = "${pkColumn.javaField}", required = false) Long ${pkColumn.javaField}, ModelMap mmap)
	{
		if (StringUtils.isNotNull(${pkColumn.javaField}))
		{
			mmap.put("${className}", ${className}Service.select${ClassName}ById(${pkColumn.javaField}));
		}
		return prefix + "/add";
	}

	/**
	 * 新增保存${functionName}
	 */
	@RequiresPermissions("${permissionPrefix}:add")
	@Log(title = "${functionName}", businessType = BusinessType.INSERT)
	@PostMapping("/add")
	@ResponseBody
	public AjaxResult addSave(${ClassName} ${className})
	{
		return toAjax(${className}Service.insert${ClassName}(${className}));
	}

	/**
	 * 修改${functionName}
	 */
	@GetMapping("/edit/{${pkColumn.javaField}}")
	public String edit(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}, ModelMap mmap)
	{
		${ClassName} ${className} = ${className}Service.select${ClassName}ById(${pkColumn.javaField});
		mmap.put("${className}", ${className});
		return prefix + "/edit";
	}

	/**
	 * 修改保存${functionName}
	 */
	@RequiresPermissions("${permissionPrefix}:edit")
	@Log(title = "${functionName}", businessType = BusinessType.UPDATE)
	@PostMapping("/edit")
	@ResponseBody
	public AjaxResult editSave(${ClassName} ${className})
	{
		return toAjax(${className}Service.update${ClassName}(${className}));
	}
	
	/**
	 * 删除${functionName}
	 */
	@RequiresPermissions("${permissionPrefix}:remove")
	@Log(title = "${tableComment}", businessType = BusinessType.DELETE)
	@PostMapping( "/remove")
	@ResponseBody
	public AjaxResult remove(String ids)
	{		
		return toAjax(${className}Service.delete${ClassName}ByIds(ids));
	}
	
}
